{"ast":null,"code":"import { combineLatest, map, of, startWith, switchMap } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/services/stock.service\";\nimport * as i2 from \"../core/services/chat.service\";\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(stocks, chat) {\n      this.stocks = stocks;\n      this.chat = chat;\n      this.symbols = ['GOOGL', 'NVDA', 'SCHG'];\n      this.range = new FormControl('1mo');\n      this.interval = new FormControl('1d');\n      this.priceSeries = new Map();\n      // Chat\n      this.question = new FormControl('');\n    }\n    ngOnInit() {\n      this.loadData(); // initial fetch\n      // React to either dropdown instantly\n      combineLatest([this.range.valueChanges.pipe(startWith(this.range.value)), this.interval.valueChanges.pipe(startWith(this.interval.value))]).subscribe(() => this.loadData());\n    }\n    loadData() {\n      this.symbols.forEach(sym => {\n        this.priceSeries.set(sym, this.stocks.getHistory(sym, this.range.value, this.interval.value));\n      });\n    }\n    ask(sym) {\n      if (!this.question.value?.trim()) return;\n      const series$ = this.priceSeries.get(sym) ?? of([]);\n      this.answer$ = series$.pipe(switchMap(series => this.chat.ask(this.question.value, {\n        symbol: sym,\n        range: this.range.value,\n        series\n      })), map(res => res.answer));\n    }\n    static {\n      this.ɵfac = function DashboardComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || DashboardComponent)(i0.ɵɵdirectiveInject(i1.StockService), i0.ɵɵdirectiveInject(i2.ChatService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: DashboardComponent,\n        selectors: [[\"app-dashboard\"]],\n        decls: 0,\n        vars: 0,\n        template: function DashboardComponent_Template(rf, ctx) {},\n        styles: [\"@charset \\\"UTF-8\\\";.viewport[_ngcontent-%COMP%]{height:calc(100vh - 60px);display:block;padding:1rem 0}\"],\n        changeDetection: 0\n      });\n    }\n  }\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}