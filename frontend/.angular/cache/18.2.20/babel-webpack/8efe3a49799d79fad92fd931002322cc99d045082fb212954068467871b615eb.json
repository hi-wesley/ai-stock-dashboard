{"ast":null,"code":"import { combineLatest, map, of, switchMap } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/services/stock.service\";\nimport * as i2 from \"../core/services/chat.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/cdk/scrolling\";\nimport * as i6 from \"../shared/visualize/line-chart.component\";\nfunction DashboardComponent_div_22_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ans_r4 = ctx.ngIf;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ans_r4);\n  }\n}\nfunction DashboardComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"app-line-chart\", 10);\n    i0.ɵɵpipe(4, \"async\");\n    i0.ɵɵelementStart(5, \"div\", 11);\n    i0.ɵɵelement(6, \"input\", 12);\n    i0.ɵɵelementStart(7, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_22_Template_button_click_7_listener() {\n      const sym_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.ask(sym_r2));\n    });\n    i0.ɵɵtext(8, \"Ask AI\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, DashboardComponent_div_22_p_9_Template, 2, 1, \"p\", 14);\n    i0.ɵɵpipe(10, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"hr\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const sym_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", sym_r2, \" price\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"symbol\", sym_r2)(\"data\", i0.ɵɵpipeBind1(4, 7, ctx_r2.priceSeries.get(sym_r2)));\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"placeholder\", \"Ask about \", sym_r2, \"\\u2026\");\n    i0.ɵɵproperty(\"formControl\", ctx_r2.question);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(10, 9, ctx_r2.answer$));\n  }\n}\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(stocks, chat) {\n      this.stocks = stocks;\n      this.chat = chat;\n      this.symbols = ['GOOGL', 'NVDA', 'SCHG'];\n      this.range = new FormControl('1mo');\n      this.interval = new FormControl('1d');\n      // Map symbol -> observable of price list\n      this.priceSeries = new Map();\n      // Chat\n      this.question = new FormControl('');\n    }\n    ngOnInit() {\n      this.loadData();\n      // Reload data when range / interval changes\n      combineLatest([this.range.valueChanges, this.interval.valueChanges]).subscribe(() => this.loadData());\n    }\n    loadData() {\n      this.symbols.forEach(sym => {\n        this.priceSeries.set(sym, this.stocks.getHistory(sym, this.range.value, this.interval.value));\n      });\n    }\n    ask(sym) {\n      if (!this.question.value?.trim()) return;\n      const series$ = this.priceSeries.get(sym) ?? of([]);\n      this.answer$ = series$.pipe(switchMap(series => this.chat.ask(this.question.value, {\n        symbol: sym,\n        range: this.range.value,\n        series\n      })), map(res => res.answer));\n    }\n    static {\n      this.ɵfac = function DashboardComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || DashboardComponent)(i0.ɵɵdirectiveInject(i1.StockService), i0.ɵɵdirectiveInject(i2.ChatService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: DashboardComponent,\n        selectors: [[\"app-dashboard\"]],\n        decls: 23,\n        vars: 3,\n        consts: [[1, \"controls\"], [3, \"formControl\"], [\"value\", \"1d\"], [\"value\", \"1mo\"], [\"value\", \"6mo\"], [\"value\", \"1y\"], [\"value\", \"5m\"], [\"value\", \"1wk\"], [\"itemSize\", \"500\", 1, \"viewport\"], [4, \"cdkVirtualFor\", \"cdkVirtualForOf\"], [3, \"symbol\", \"data\"], [1, \"chat\"], [3, \"placeholder\", \"formControl\"], [3, \"click\"], [\"class\", \"answer\", 4, \"ngIf\"], [1, \"answer\"]],\n        template: function DashboardComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\");\n            i0.ɵɵtext(2, \"Range \");\n            i0.ɵɵelementStart(3, \"select\", 1)(4, \"option\", 2);\n            i0.ɵɵtext(5, \"1\\u202FDay\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"option\", 3);\n            i0.ɵɵtext(7, \"1\\u202FMonth\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"option\", 4);\n            i0.ɵɵtext(9, \"6\\u202FMonths\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"option\", 5);\n            i0.ɵɵtext(11, \"1\\u202FYear\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(12, \"label\");\n            i0.ɵɵtext(13, \"Interval \");\n            i0.ɵɵelementStart(14, \"select\", 1)(15, \"option\", 6);\n            i0.ɵɵtext(16, \"5\\u202Fmin\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(17, \"option\", 2);\n            i0.ɵɵtext(18, \"1\\u202Fday\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(19, \"option\", 7);\n            i0.ɵɵtext(20, \"1\\u202Fweek\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(21, \"cdk-virtual-scroll-viewport\", 8);\n            i0.ɵɵtemplate(22, DashboardComponent_div_22_Template, 12, 11, \"div\", 9);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formControl\", ctx.range);\n            i0.ɵɵadvance(11);\n            i0.ɵɵproperty(\"formControl\", ctx.interval);\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"cdkVirtualForOf\", ctx.symbols);\n          }\n        },\n        dependencies: [i3.NgIf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.FormControlDirective, i5.CdkFixedSizeVirtualScroll, i5.CdkVirtualForOf, i5.CdkVirtualScrollViewport, i6.LineChartComponent, i3.AsyncPipe],\n        styles: [\"@charset \\\"UTF-8\\\";.viewport[_ngcontent-%COMP%]{height:calc(100vh - 60px);display:block;padding:1rem 0}\"],\n        changeDetection: 0\n      });\n    }\n  }\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}