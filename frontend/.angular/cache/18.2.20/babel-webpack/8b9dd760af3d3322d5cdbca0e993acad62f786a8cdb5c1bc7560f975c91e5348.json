{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nlet LineChartComponent = class LineChartComponent {\n  constructor() {\n    this.data = [];\n    this.symbol = '';\n  }\n  /** Guard against null to avoid NaN errors */\n  get series() {\n    const pts = this.data ?? [];\n    return [{\n      name: this.symbol,\n      series: pts.map(p => ({\n        name: new Date(p.date),\n        value: p.close\n      }))\n    }];\n  }\n};\n__decorate([Input()], LineChartComponent.prototype, \"data\", void 0);\n__decorate([Input()], LineChartComponent.prototype, \"symbol\", void 0);\nLineChartComponent = __decorate([Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})], LineChartComponent);\nexport { LineChartComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}