{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { switchMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/services/stock.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/cdk/scrolling\";\nimport * as i5 from \"../shared/visualize/line-chart.component\";\nfunction DashboardComponent_div_5_ng_container_5_app_line_chart_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-line-chart\", 12);\n  }\n  if (rf & 2) {\n    const pts_r4 = i0.ɵɵnextContext().ngIf;\n    const sym_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"symbol\", sym_r2)(\"data\", pts_r4);\n  }\n}\nfunction DashboardComponent_div_5_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, DashboardComponent_div_5_ng_container_5_app_line_chart_1_Template, 1, 2, \"app-line-chart\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const pts_r4 = ctx.ngIf;\n    i0.ɵɵnextContext();\n    const noData_r5 = i0.ɵɵreference(8);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", pts_r4.length > 1)(\"ngIfElse\", noData_r5);\n  }\n}\nfunction DashboardComponent_div_5_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 13);\n    i0.ɵɵtext(1, \" Not enough data for this symbol. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_5_p_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ans_r6 = ctx.ngIf;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ans_r6, \" \");\n  }\n}\nfunction DashboardComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_5_Template_button_click_3_listener() {\n      const sym_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.removeSymbol(sym_r2));\n    });\n    i0.ɵɵtext(4, \"\\u2716\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(5, DashboardComponent_div_5_ng_container_5_Template, 2, 2, \"ng-container\", 7);\n    i0.ɵɵpipe(6, \"async\");\n    i0.ɵɵtemplate(7, DashboardComponent_div_5_ng_template_7_Template, 2, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementStart(9, \"div\", 8);\n    i0.ɵɵelement(10, \"input\", 9);\n    i0.ɵɵelementStart(11, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_div_5_Template_button_click_11_listener() {\n      const sym_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.ask(sym_r2));\n    });\n    i0.ɵɵtext(12, \"Ask AI\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, DashboardComponent_div_5_p_13_Template, 2, 1, \"p\", 10);\n    i0.ɵɵpipe(14, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"hr\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const sym_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", sym_r2, \" price \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(6, 6, ctx_r2.priceSeries.get(sym_r2)));\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate1(\"placeholder\", \"Ask about \", sym_r2, \"\\u2026\");\n    i0.ɵɵproperty(\"formControl\", ctx_r2.questionMap.get(sym_r2));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(14, 8, ctx_r2.answerMap.get(sym_r2)));\n  }\n}\n/** Mirror of the backend validation map so the UI never sends an illegal pair. */\nconst RANGE_INTERVALS = {\n  '1d': ['1m', '2m', '5m', '15m', '30m', '60m', '90m'],\n  '5d': ['1m', '2m', '5m', '15m', '30m', '60m', '90m'],\n  '1mo': ['1d', '5d', '1wk', '1mo'],\n  '3mo': ['1d', '5d', '1wk', '1mo'],\n  '6mo': ['1d', '5d', '1wk', '1mo'],\n  '1y': ['1d', '5d', '1wk', '1mo', '3mo'],\n  '2y': ['1d', '5d', '1wk', '1mo', '3mo'],\n  '5y': ['1d', '1wk', '1mo', '3mo'],\n  '10y': ['1d', '1wk', '1mo', '3mo'],\n  'ytd': ['1d', '5d', '1wk', '1mo'],\n  'max': ['1d', '5d', '1wk', '1mo', '3mo']\n};\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(stocks) {\n      this.stocks = stocks;\n      /* ▼── UI controls */\n      this.ticker = new FormControl('AAPL', {\n        nonNullable: true\n      });\n      this.rangeCtrl = new FormControl('1mo', {\n        nonNullable: true\n      });\n      this.intervalCtrl = new FormControl('1d', {\n        nonNullable: true\n      });\n      /* ▼── Chart data stream */\n      this.chart$ = this.ticker.valueChanges.pipe(switchMap(() => this.fetchChart()));\n    }\n    ngOnInit() {\n      // kick off first load\n      this.fetchChart().subscribe();\n    }\n    /** Ensures we always send a legal range/interval pair to the backend. */\n    fetchChart() {\n      const range = this.rangeCtrl.value;\n      let interval = this.intervalCtrl.value;\n      if (!RANGE_INTERVALS[range].includes(interval)) {\n        interval = RANGE_INTERVALS[range][0]; // default\n        this.intervalCtrl.setValue(interval, {\n          emitEvent: false\n        });\n      }\n      return this.stocks.getChart(this.ticker.value, range, interval); // → backend /api/chart\n    }\n    static {\n      this.ɵfac = function DashboardComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || DashboardComponent)(i0.ɵɵdirectiveInject(i1.StockService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: DashboardComponent,\n        selectors: [[\"app-dashboard\"]],\n        decls: 6,\n        vars: 2,\n        consts: [[\"noData\", \"\"], [1, \"search\"], [\"placeholder\", \"Enter ticker (e.g. TSLA)\", 3, \"formControl\"], [3, \"click\"], [\"itemSize\", \"500\", 1, \"viewport\", 2, \"height\", \"calc(100vh - 80px)\", \"display\", \"block\"], [4, \"cdkVirtualFor\", \"cdkVirtualForOf\"], [1, \"remove\", 3, \"click\"], [4, \"ngIf\"], [1, \"chat\"], [3, \"placeholder\", \"formControl\"], [\"class\", \"answer\", 4, \"ngIf\"], [3, \"symbol\", \"data\", 4, \"ngIf\", \"ngIfElse\"], [3, \"symbol\", \"data\"], [2, \"color\", \"gray\", \"margin\", \"2rem 0\"], [1, \"answer\"]],\n        template: function DashboardComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 1);\n            i0.ɵɵelement(1, \"input\", 2);\n            i0.ɵɵelementStart(2, \"button\", 3);\n            i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_2_listener() {\n              return ctx.addSymbol();\n            });\n            i0.ɵɵtext(3, \"Add\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(4, \"cdk-virtual-scroll-viewport\", 4);\n            i0.ɵɵtemplate(5, DashboardComponent_div_5_Template, 16, 10, \"div\", 5);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"formControl\", ctx.search);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"cdkVirtualForOf\", ctx.symbols);\n          }\n        },\n        dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlDirective, i4.CdkFixedSizeVirtualScroll, i4.CdkVirtualForOf, i4.CdkVirtualScrollViewport, i5.LineChartComponent, i2.AsyncPipe],\n        styles: [\".search[_ngcontent-%COMP%]{display:flex;gap:.5rem;margin:1rem 0}.remove[_ngcontent-%COMP%]{margin-left:.5rem;background:transparent;border:none;cursor:pointer;font-size:1rem}.chat[_ngcontent-%COMP%]{margin-top:1rem}.chat[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:18rem}.chat[_ngcontent-%COMP%]   .answer[_ngcontent-%COMP%]{margin-top:.25rem;color:#4169e1}\"],\n        changeDetection: 0\n      });\n    }\n  }\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}